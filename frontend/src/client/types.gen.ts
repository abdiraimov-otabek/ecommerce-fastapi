// This file is auto-generated by @hey-api/openapi-ts

export type Body_login_login_access_token = {
  grant_type?: string | null;
  username: string;
  password: string;
  scope?: string;
  client_id?: string | null;
  client_secret?: string | null;
};

export type CategoriesPublic = {
  data: Array<CategoryPublic>;
  count: number;
};

export type CategoryCreate = {
  name: string;
  /**
   * ID родительской категории (если это подкатегория)
   */
  parent_id?: string | null;
};

export type CategoryPublic = {
  name: string;
  /**
   * ID родительской категории (если это подкатегория)
   */
  parent_id?: string | null;
  id: string;
};

export type CategoryUpdate = {
  name?: string | null;
  parent_id?: string | null;
};

export type HTTPValidationError = {
  detail?: Array<ValidationError>;
};

export type ItemCreate = {
  title: string;
  description?: string | null;
};

export type ItemPublic = {
  title: string;
  description?: string | null;
  id: string;
  owner_id: string;
};

export type ItemsPublic = {
  data: Array<ItemPublic>;
  count: number;
};

export type ItemUpdate = {
  title?: string | null;
  description?: string | null;
};

export type Message = {
  message: string;
};

export type NewPassword = {
  token: string;
  new_password: string;
};

export type PrivateUserCreate = {
  email: string;
  password: string;
  full_name: string;
  is_verified?: boolean;
};

export type ProductCreate = {
  name: string;
  description?: string | null;
  sku: string;
  price: number | string;
  quantity: number;
  in_stock?: boolean;
  image_url?: string | null;
  is_active?: boolean;
  category_id: string;
};

export type ProductRead = {
  name: string;
  description?: string | null;
  sku?: string | null;
  price: string;
  quantity: number;
  in_stock?: boolean;
  image_url?: string | null;
  is_active?: boolean;
  category_id?: string | null;
  id: string;
  created_at: string;
  updated_at: string;
};

export type ProductUpdate = {
  name?: string | null;
  description?: string | null;
  price?: number | string | null;
  quantity?: number | null;
  in_stock?: boolean | null;
  image_url?: string | null;
  is_active?: boolean | null;
  category_id?: string | null;
};

export type Token = {
  access_token: string;
  token_type?: string;
};

export type UpdatePassword = {
  current_password: string;
  new_password: string;
};

export type UserCreate = {
  email: string;
  is_active?: boolean;
  is_superuser?: boolean;
  full_name?: string | null;
  password: string;
};

export type UserPublic = {
  email: string;
  is_active?: boolean;
  is_superuser?: boolean;
  full_name?: string | null;
  id: string;
};

export type UserRegister = {
  email: string;
  password: string;
  full_name?: string | null;
};

export type UsersPublic = {
  data: Array<UserPublic>;
  count: number;
};

export type UserUpdateMe = {
  full_name?: string | null;
  email?: string | null;
  password?: string | null;
};

export type ValidationError = {
  loc: Array<string | number>;
  msg: string;
  type: string;
};

export type CategoriesReadCategoriesData = {
  limit?: number;
  skip?: number;
};

export type CategoriesReadCategoriesResponse = CategoriesPublic;

export type CategoriesCreateCategoryData = {
  requestBody: CategoryCreate;
};

export type CategoriesCreateCategoryResponse = CategoryPublic;

export type CategoriesReadCategoryData = {
  categoryId: string;
};

export type CategoriesReadCategoryResponse = CategoryPublic;

export type CategoriesUpdateCategoryData = {
  categoryId: string;
  requestBody: CategoryUpdate;
};

export type CategoriesUpdateCategoryResponse = CategoryPublic;

export type CategoriesDeleteCategoryData = {
  categoryId: string;
};

export type CategoriesDeleteCategoryResponse = {
  [key: string]: unknown;
};

export type ItemsReadItemsData = {
  limit?: number;
  skip?: number;
};

export type ItemsReadItemsResponse = ItemsPublic;

export type ItemsCreateItemData = {
  requestBody: ItemCreate;
};

export type ItemsCreateItemResponse = ItemPublic;

export type ItemsReadItemData = {
  id: string;
};

export type ItemsReadItemResponse = ItemPublic;

export type ItemsUpdateItemData = {
  id: string;
  requestBody: ItemUpdate;
};

export type ItemsUpdateItemResponse = ItemPublic;

export type ItemsDeleteItemData = {
  id: string;
};

export type ItemsDeleteItemResponse = Message;

export type LoginLoginAccessTokenData = {
  formData: Body_login_login_access_token;
};

export type LoginLoginAccessTokenResponse = Token;

export type LoginTestTokenResponse = UserPublic;

export type LoginRecoverPasswordData = {
  email: string;
};

export type LoginRecoverPasswordResponse = Message;

export type LoginResetPasswordData = {
  requestBody: NewPassword;
};

export type LoginResetPasswordResponse = Message;

export type LoginRecoverPasswordHtmlContentData = {
  email: string;
};

export type LoginRecoverPasswordHtmlContentResponse = string;

export type PrivateCreateUserData = {
  requestBody: PrivateUserCreate;
};

export type PrivateCreateUserResponse = UserPublic;

export type ProductsReadProductsData = {
  limit?: number;
  skip?: number;
};

export type ProductsReadProductsResponse = {
  [key: string]: unknown;
};

export type ProductsCreateProductData = {
  requestBody: ProductCreate;
};

export type ProductsCreateProductResponse = ProductRead;

export type ProductsReadProductData = {
  id: string;
};

export type ProductsReadProductResponse = ProductRead;

export type ProductsUpdateProductData = {
  id: string;
  requestBody: ProductUpdate;
};

export type ProductsUpdateProductResponse = ProductRead;

export type ProductsDeleteProductData = {
  id: string;
};

export type ProductsDeleteProductResponse = Message;

export type UsersReadUsersData = {
  limit?: number;
  skip?: number;
};

export type UsersReadUsersResponse = UsersPublic;

export type UsersCreateUserData = {
  requestBody: UserCreate;
};

export type UsersCreateUserResponse = UserPublic;

export type UsersReadUserMeResponse = UserPublic;

export type UsersDeleteUserMeResponse = Message;

export type UsersUpdateUserMeData = {
  requestBody: UserUpdateMe;
};

export type UsersUpdateUserMeResponse = UserPublic;

export type UsersUpdatePasswordMeData = {
  requestBody: UpdatePassword;
};

export type UsersUpdatePasswordMeResponse = Message;

export type UsersRegisterUserData = {
  requestBody: UserRegister;
};

export type UsersRegisterUserResponse = UserPublic;

export type UsersReadUserByIdData = {
  userId: string;
};

export type UsersReadUserByIdResponse = UserPublic;

export type UsersUpdateUserData = {
  requestBody: UserUpdateMe;
  userId: string;
};

export type UsersUpdateUserResponse = UserPublic;

export type UsersDeleteUserData = {
  userId: string;
};

export type UsersDeleteUserResponse = Message;
